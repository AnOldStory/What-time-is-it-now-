{"version":3,"sources":["components/pages/main/Main.js","components/pages/post/Cards.js","components/pages/post/appbody/AppBody.js","components/pages/post/showpost/ShowPost.js","components/shared/nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","link","queryString","parse","location","search","p","history","replace","react_default","a","createElement","Component","Cards","Card_default","CardHeader_default","avatar","Avatar_default","aria-label","author","charAt","title","CardContent_default","Typography_default","component","contents","CardActions_default","disableActionSpacing","FacebookShareButton","quote","hashtag","url","id","IconButton_default","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","LineShareButton","LineIcon","AppBody","handleChange","target","event","setState","defineProperty","value","state","name","text","notice","loding","bind","assertThisInitialized","handleSubmit","handleUpdate","_this2","fetch","then","res","json","JSON","catch","err","console","log","_this3","method","headers","Content-Type","body","stringify","_this4","Grid_default","className","container","spacing","justify","alignItems","item","Paper_default","direction","TextField_default","label","onChange","margin","variant","multiline","Button_default","color","onClick","disabled","Icon_default","CircularProgress_default","disableShrink","map","row","post_Cards","key","ShowPost","match","params","Link","to","Nav","AppBar_default","position","Toolbar_default","noWrap","Tabs_default","page","handle","indicatorColor","textColor","Tab_default","icon","react_fontawesome_index_es","library","add","faHome","faStickyNote","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","hint","App","input","styles","BrowserRouter","basename","nav_Nav","Route","exact","path","Switch","Appbody","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8UAmBeA,cAfX,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IACN,IAAMQ,EAAOC,IAAYC,MAAMT,EAAKD,MAAMW,SAASC,QAAQC,EAF7C,OAGdZ,EAAKD,MAAMc,QAAQC,QAAQP,GAHbP,wEAOd,OACIe,EAAAC,EAAAC,cAAA,0BATOC,+RC8DJC,2LAxCP,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACID,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACIM,OACIP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAQQ,aAAW,UACdrB,KAAKJ,MAAM0B,OAAOC,OAAO,IAGlCC,MAAOxB,KAAKJ,MAAM0B,SAGtBV,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAYc,UAAU,KACjB3B,KAAKJ,MAAMgC,WAGpBhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAaiB,sBAAoB,GAC7BlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAqBC,MAAM,mBAAmBC,QAAQ,oBAAoBC,IAAK,qDAAuDlC,KAAKJ,MAAMuC,IAC7IvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,KACID,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAcC,KAAM,GAAIC,OAAO,MAGvC3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAoBhB,MAAM,mBAAmBS,QAAQ,oBAAoBC,IAAK,qDAAuDlC,KAAKJ,MAAMuC,IAC5IvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,KACID,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAaH,KAAM,GAAIC,OAAO,MAGtC3B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAiBlB,MAAM,mBAAmBU,IAAK,qDAAuDlC,KAAKJ,MAAMuC,IAC7GvB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,KACID,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUL,KAAM,GAAIC,OAAO,gBAhCvCxB,mCCgHL6B,eA3HX,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACf/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KA0BViD,aAAe,SAAAC,GAAM,OAAI,SAAAC,GACrBlD,EAAKmD,SAALlD,OAAAmD,EAAA,EAAAnD,CAAA,GACKgD,EAASC,EAAMD,OAAOI,UA3B3BrD,EAAKsD,MAAQ,CACTC,KAAM,eACNC,KAAM,wCACNC,OAAQ,GACRC,OAAQ,GAEZ1D,EAAKgD,aAAehD,EAAKgD,aAAaW,KAAlB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KACpBA,EAAK6D,aAAe7D,EAAK6D,aAAaF,KAAlB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KACpBA,EAAK8D,aAAe9D,EAAK8D,aAAaH,KAAlB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KAVLA,mFAaC,IAAA+D,EAAA5D,KAChB6D,MAAM,yBACDC,KAAK,SAAAC,GACF,OAAOA,EAAIC,SAEdF,KAAK,SAAAE,GACFJ,EAAKZ,SAAS,CACVM,OAAQW,KAAK3D,MAAM0D,OAG1BE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,4CAUnB,IAAAG,EAAAtE,KACXA,KAAKgD,SAAS,CACVO,OAAQ,IAEZM,MAAM,wBAAyB,CAC3BU,OAAQ,OACRC,QAAS,CACLC,eAAgB,mCAEpBC,KAAMT,KAAKU,UAAU,CACjBrD,OAAUtB,KAAKmD,MAAMC,KACrBxB,SAAY5B,KAAKmD,MAAME,SAE5BS,KAAK,WACJQ,EAAKX,eACLW,EAAKtB,SAAS,CACVK,KAAM,GACNE,OAAQ,MAGXW,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,4CAGnB,IAAAS,EAAA5E,KACX6D,MAAM,yBACDC,KAAK,SAAAC,GACF,OAAOA,EAAIC,SAEdF,KAAK,SAAAE,GACFY,EAAK5B,SAAS,CACVM,OAAQW,KAAK3D,MAAM0D,OAG1BE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGzB,IACCb,EAAWtD,KAAKmD,MAAhBG,OACN,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMiE,UAAU,aAAaC,WAAS,EAACC,QAAS,GAAIC,QAAQ,SAASC,WAAW,UAC5EtE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMiE,UAAU,QAAQK,MAAI,GACxBvE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,KACID,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CACIkE,WAAS,EACTM,UAAU,SACVJ,QAAQ,SACRH,UAAU,gBAEVlE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACIsB,GAAG,gBACHoD,MAAM,eACNrC,MAAOlD,KAAKmD,MAAMC,KAClBoC,SAAUxF,KAAK6C,aAAa,QAC5B4C,OAAO,OACPC,QAAQ,aAEZ9E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CACIsB,GAAG,4BACHoD,MAAM,eACNI,WAAS,EACTzC,MAAOlD,KAAKmD,MAAME,KAClBmC,SAAUxF,KAAK6C,aAAa,QAC5B4C,OAAO,SACPC,QAAQ,aAEZ9E,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAQ6E,QAAQ,YAAYG,MAAM,UAAUC,QAAS9F,KAAK0D,aAAcqC,SAAgC,IAAtB/F,KAAKmD,MAAMI,QAClE,IAAtBvD,KAAKmD,MAAMI,OAAe,6DAAkB,6BAC7C3C,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,gBAKZD,EAAAC,EAAAC,cAAA,WAEuB,IAAtBd,KAAKmD,MAAMI,OAAe3C,EAAAC,EAAAC,cAACmF,GAAApF,EAAD,CAAkBiE,UAAU,SAASoB,eAAa,IAAMtF,EAAAC,EAAAC,cAAA,WAEnFF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,KACKyC,EAAO6C,IAAI,SAAAC,GAAG,OACXxF,EAAAC,EAAAC,cAACuF,EAAD,CAAOC,IAAKF,EAAIjE,GAAIb,OAAQ8E,EAAI9E,OAAQM,SAAUwE,EAAIxE,SAAUO,GAAIiE,EAAIjE,kBAlHlFpB,uBCmCPwF,eAtCX,SAAAA,EAAY3G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,IACf1G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyG,GAAApG,KAAAH,KAAMJ,KACDuD,MAAQ,CACTG,OAAQ,IAHGzD,mFAMC,IAAA+D,EAAA5D,KAChB6D,MAAM,yBAA2B7D,KAAKJ,MAAM4G,MAAMC,OAAOtE,IACpD2B,KAAK,SAAAC,GACF,OAAOA,EAAIC,SAEdF,KAAK,SAAAE,GACFJ,EAAKZ,SAAS,CACVM,OAAQ,CAACW,KAAK3D,MAAM0D,QAG3BE,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAEzB,IACCb,EAAWtD,KAAKmD,MAAhBG,OACN,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMiE,UAAU,aAAaC,WAAS,EAACC,QAAS,GAAIC,QAAQ,SAASC,WAAW,UAC5EtE,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CAAMiE,UAAU,QAAQK,MAAI,GACxBvE,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,KACCyC,EAAO6C,IAAI,SAAAC,GAAG,OACPxF,EAAAC,EAAAC,cAACuF,EAAD,CAAOC,IAAKF,EAAIjE,GAAIb,OAAQ8E,EAAI9E,OAAQM,SAAUwE,EAAIxE,SAAUO,GAAIiE,EAAIjE,SAIpFvB,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAQ6E,QAAQ,YAAY/D,UAAW+E,KAAMC,GAAG,SAAhD,2EA/BG5F,2GC+BR6F,4LAxBP,OACIhG,EAAAC,EAAAC,cAAA,OAAKgE,UAAU,OACXlE,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,CAAQiG,SAAS,UACblG,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,KACID,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAY6E,QAAQ,KAAKG,MAAM,UAAUmB,QAAM,GAA/C,wBAGApG,EAAAC,EAAAC,cAACmG,GAAApG,EAAD,CACIqC,MAAOlD,KAAKJ,MAAMsH,KAClB1B,SAAUxF,KAAKJ,MAAMuH,OAAO3D,KAAK,MACjC4D,eAAe,YACfC,UAAU,aAEVzG,EAAAC,EAAAC,cAACwG,GAAAzG,EAAD,CAAK0G,KAAM3G,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,CAAiBD,KAAK,OAAOjF,KAAK,OAASiD,MAAM,eAAK5D,UAAW+E,KAAMC,GAAG,MACrF/F,EAAAC,EAAAC,cAACwG,GAAAzG,EAAD,CAAK0G,KAAM3G,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,CAAiBD,KAAK,cAAcjF,KAAK,OAASiD,MAAM,qBAAM5D,UAAW+E,KAAMC,GAAG,WAEhG3G,KAAKJ,MAAM4G,gBAlBlBzF,cCAlB0G,IAAQC,IAAIC,IAAQC,KAGpB,IAAMC,GAAQC,yBAAe,CAAEC,QAAW,CAAEC,OAAU,CAAEC,MAAS,OAAQC,MAAS,0BAA4BC,WAAc,CAAEC,MAAS,OAAQC,QAAW,WAAaC,QAAW,CAAEC,MAAS,wBAAyBC,KAAQ,wBAAyBC,KAAQ,wBAAyBC,aAAgB,QAAUC,UAAa,CAAEJ,MAAS,wBAAyBC,KAAQ,yBAA0BC,KAAQ,wBAAyBC,aAAgB,yBAA2BE,MAAS,CAAEL,MAAS,UAAWC,KAAQ,UAAWC,KAAQ,UAAWC,aAAgB,QAAUrF,KAAQ,CAAEiF,QAAW,sBAAuBK,UAAa,sBAAuB5C,SAAY,sBAAuB8C,KAAQ,0BAkC5pBC,eA9Bb,SAAAA,EAAYlJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8I,IACjBjJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgJ,GAAA3I,KAAAH,KAAMJ,KAMRiD,aAAe,SAACE,EAAOgG,GACrBlJ,EAAKmD,SAAS,CACZkE,KAAM6B,KAPRlJ,EAAKsD,MAAQ,CACX+D,KAAM,GAERrH,EAAKgD,aAAehD,EAAKgD,aAAaW,KAAlB1D,OAAA2D,EAAA,EAAA3D,QAAA2D,EAAA,EAAA3D,CAAAD,KALHA,wEAajB,OACEe,EAAAC,EAAAC,cAACkI,EAAA,iBAAD,CAAkBnB,MAAOA,IACvBjH,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAeC,SAAS,6BACtBtI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqI,GAAD,CAAKjC,KAAMlH,KAAKmD,MAAM+D,KAAMC,OAAQnH,KAAK6C,eACzCjC,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3H,UAAWhC,IACjCiB,EAAAC,EAAAC,cAACyI,EAAA,EAAD,KACE3I,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOE,KAAK,YAAY3H,UAAW4E,KACnC3F,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOE,KAAK,QAAQ3H,UAAW6H,gBAtB3BzI,aCNE0I,QACW,cAA7BC,OAAOnJ,SAASoJ,UAEe,UAA7BD,OAAOnJ,SAASoJ,UAEhBD,OAAOnJ,SAASoJ,SAASnD,MACvB,2DCbNoD,IAASC,OAAOjJ,EAAAC,EAAAC,cAACgJ,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrG,KAAK,SAAAsG,GACjCA,EAAaC","file":"static/js/main.f7d75c5c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        const link = queryString.parse(this.props.location.search).p\r\n        this.props.history.replace(link)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Main \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    TwitterShareButton,\r\n    LineShareButton\r\n} from 'react-share';\r\n\r\nimport {\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n    LineIcon\r\n} from 'react-share';\r\n\r\nimport \"../../../css/AppBody.css\";\r\n\r\nclass Cards extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card >\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"Recipe\" >\r\n                                {this.props.author.charAt(0)}\r\n                            </Avatar>\r\n                        }\r\n                        title={this.props.author}\r\n\r\n                    />\r\n                    <CardContent>\r\n                        <Typography component=\"p\">\r\n                            {this.props.contents}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableActionSpacing>\r\n                        <FacebookShareButton quote=\"WhatTimeIsItNow?\" hashtag=\"#WhatTimeIsItNow?\" url={\"https://anoldstory.github.io/WhatTimeIsItNow/post/\" + this.props.id} >\r\n                            <IconButton>\r\n                                <FacebookIcon size={32} round={true} />\r\n                            </IconButton>\r\n                        </FacebookShareButton>\r\n                        <TwitterShareButton title=\"WhatTimeIsItNow?\" hashtag=\"#WhatTimeIsItNow?\" url={\"https://anoldstory.github.io/WhatTimeIsItNow/post/\" + this.props.id} >\r\n                            <IconButton>\r\n                                <TwitterIcon size={32} round={true} />\r\n                            </IconButton>\r\n                        </TwitterShareButton>\r\n                        <LineShareButton title=\"WhatTimeIsItNow?\" url={\"https://anoldstory.github.io/WhatTimeIsItNow/post/\" + this.props.id} >\r\n                            <IconButton>\r\n                                <LineIcon size={32} round={true} />\r\n                            </IconButton>\r\n                        </LineShareButton>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Cards from '../Cards';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport '../../../../css/AppBody.css';\r\n\r\nclass AppBody extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"익명\",\r\n            text: \"글을 써주세요\",\r\n            notice: [],\r\n            loding: 0\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://opso.ml/board\")\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                this.setState({\r\n                    notice: JSON.parse(json)\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    handleChange = target => event => {\r\n        this.setState({\r\n            [target]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit() {\r\n        this.setState({\r\n            loding: 1\r\n        })\r\n        fetch(\"https://opso.ml/board\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=UTF-8\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"author\": this.state.name,\r\n                \"contents\": this.state.text\r\n            })\r\n        }).then(() => {\r\n            this.handleUpdate()\r\n            this.setState({\r\n                text: \"\",\r\n                loding: 0\r\n            })\r\n        })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleUpdate() {\r\n        fetch(\"https://opso.ml/board\")\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                this.setState({\r\n                    notice: JSON.parse(json)\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        let { notice } = this.state;\r\n        return (\r\n            <div>\r\n                <Grid className=\"center-box\" container spacing={40} justify=\"center\" alignItems=\"center\">\r\n                    <Grid className=\"paper\" item>\r\n                        <Paper >\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                className=\"grid-padding\"\r\n                            >\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"이름\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange('name')}\r\n                                    margin=\"none\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <br />\r\n                                <TextField\r\n                                    id=\"outlined-multiline-static\"\r\n                                    label=\"내용\"\r\n                                    multiline\r\n                                    value={this.state.text}\r\n                                    onChange={this.handleChange('text')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} disabled={this.state.loding === 1 ? true : false}>\r\n                                    {this.state.loding === 1 ? \"글을 올리고 있습니다. \" : \"글 올리기 \"}\r\n                                    <Icon >send</Icon>\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Paper>\r\n                        <br />\r\n\r\n                        {this.state.loding === 1 ? <CircularProgress className=\"loding\" disableShrink /> : <br />}\r\n\r\n                        <Paper >\r\n                            {notice.map(row => (\r\n                                <Cards key={row.id} author={row.author} contents={row.contents} id={row.id} />\r\n                            ))}\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppBody;","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Cards from '../Cards';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ShowPost extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            notice: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"https://opso.ml/board/\" + this.props.match.params.id)\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(json => {\r\n                this.setState({\r\n                    notice: [JSON.parse(json)]\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        let { notice } = this.state;\r\n        return (\r\n            <div>\r\n                <Grid className=\"center-box\" container spacing={40} justify=\"center\" alignItems=\"center\">\r\n                    <Grid className=\"paper\" item>\r\n                        <Paper>\r\n                        {notice.map(row => (\r\n                                <Cards key={row.id} author={row.author} contents={row.contents} id={row.id} />\r\n                            ))}\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Button variant=\"contained\" component={Link} to=\"/post\">글쓰는 곳으로 돌아가기</Button>\r\n                    \r\n                </Grid>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowPost;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport '../../../css/Nav.css';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            What time is it now?\r\n                        </Typography>\r\n                        <Tabs\r\n                            value={this.props.page}\r\n                            onChange={this.props.handle.bind(null)}\r\n                            indicatorColor=\"secondary\"\r\n                            textColor=\"secondary\"\r\n                        >\r\n                            <Tab icon={<FontAwesomeIcon icon=\"home\" size=\"2x\" />} label=\"메인\" component={Link} to=\"/\" />\r\n                            <Tab icon={<FontAwesomeIcon icon=\"sticky-note\" size=\"2x\" />} label=\"글목록\" component={Link} to=\"/post\" />\r\n                        </Tabs>\r\n                        {this.props.match}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faHome, faStickyNote } from '@fortawesome/free-solid-svg-icons'\n\n\nimport Main from './components/pages/main/Main';\nimport Appbody from './components/pages/post/appbody/AppBody';\nimport ShowPost from './components/pages/post/showpost/ShowPost';\nimport Nav from './components/shared/nav/Nav';\n\nlibrary.add(faHome, faStickyNote)\n\n\nconst theme = createMuiTheme({ \"palette\": { \"common\": { \"black\": \"#000\", \"white\": \"rgba(255, 255, 255, 1)\" }, \"background\": { \"paper\": \"#fff\", \"default\": \"#fafafa\" }, \"primary\": { \"light\": \"rgba(77, 171, 245, 1)\", \"main\": \"rgba(33, 150, 243, 1)\", \"dark\": \"rgba(23, 105, 170, 1)\", \"contrastText\": \"#fff\" }, \"secondary\": { \"light\": \"rgba(77, 171, 245, 1)\", \"main\": \"rgba(255, 255, 255, 1)\", \"dark\": \"rgba(23, 105, 170, 1)\", \"contrastText\": \"rgba(23, 105, 170, 1)\" }, \"error\": { \"light\": \"#e57373\", \"main\": \"#f44336\", \"dark\": \"#d32f2f\", \"contrastText\": \"#fff\" }, \"text\": { \"primary\": \"rgba(0, 0, 0, 0.87)\", \"secondary\": \"rgba(0, 0, 0, 0.54)\", \"disabled\": \"rgba(0, 0, 0, 0.38)\", \"hint\": \"rgba(0, 0, 0, 0.38)\" } } })\n// const theme = createMuiTheme({\"palette\":{\"common\":{\"black\":\"#000\",\"white\":\"rgba(255, 255, 255, 1)\"},\"background\":{\"paper\":\"rgba(255, 245, 245, 1)\",\"default\":\"rgba(255, 243, 230, 1)\"},\"primary\":{\"light\":\"rgba(255, 255, 255, 1)\",\"main\":\"rgba(60, 60, 60, 1)\",\"dark\":\"rgba(0, 0, 0, 1)\",\"contrastText\":\"#fff\"},\"secondary\":{\"light\":\"rgba(255, 255, 255, 1)\",\"main\":\"rgba(255, 255, 255, 1)\",\"dark\":\"rgba(255, 255, 255, 1)\",\"contrastText\":\"rgba(255, 255, 255, 1)\"},\"error\":{\"light\":\"#e57373\",\"main\":\"#f44336\",\"dark\":\"#d32f2f\",\"contrastText\":\"#fff\"},\"text\":{\"primary\":\"rgba(0, 0, 0, 0.87)\",\"secondary\":\"rgba(255, 255, 255, 0.54)\",\"disabled\":\"rgba(0, 0, 0, 0.38)\",\"hint\":\"rgba(0, 0, 0, 0.38)\"}}})\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: 0,\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange = (event, input) => {\n    this.setState({\n      page: input\n    })\n  };\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter basename=\"/WhatTimeIsItNow-Frontend\">\n          <div>\n            <Nav page={this.state.page} handle={this.handleChange}/>\n            <Route exact path=\"/\" component={Main}/>\n            <Switch >\n              <Route path=\"/post/:id\" component={ShowPost}/>\n              <Route path=\"/post\" component={Appbody} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}